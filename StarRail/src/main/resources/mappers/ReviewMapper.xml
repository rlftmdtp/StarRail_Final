<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="railro.review.mapper.ReviewMapper">

<!-- start 추천 -->
	<select id="prefer_Select" resultType="java.util.HashMap">
		SELECT m.M_NO, pd.TAG_NO
			  FROM MEMBER_PREFER pre, MEMBER_PREFERDETAIL pd, HASH_SEARCH hs, MEMBER m
			  where pre.PRE_NO = pd.PRE_NO and
			        hs.HS_NO = pd.TAG_NO and
			        m.M_ID = pre.M_ID
			  order by m.M_NO
	</select>
	
	<select id="tagRecommend_Select" resultType="Hash_SearchVO" parameterType="java.util.ArrayList">
		select *
			from HASH_SEARCH
  			<where>
  				HS_NO IN
  				<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			    	#{item.value}
				</foreach>  				
  			</where>
	</select>
	
	<select id="reviewRecommend_Select" resultType="ReviewVO">
		select r.R_NO as r_no, r.M_ID as m_id, r.R_TITLE as r_title, r.R_CONTENT as r_content
		      	, r.R_DATE as r_date, r.R_HIT as r_hit, r.R_RECOMM as r_recomm
			  from REVIEW r, HASH h
			  where r.R_NO = h.R_NO and
			        h.R_HASH = #{tag}
			  order by r.R_RECOMM desc
	</select>
	
	<select id="reviewRecommendCount_Select" resultType="Integer">
		select count(*)
			  from REVIEW r, HASH h
			  where r.R_NO = h.R_NO and
			        h.R_HASH = #{tag}
			  order by r.R_RECOMM desc
	</select>
	
	<select id="mr_noSelect" resultType="Integer">
		select count(MR_NO) FROM MEMBER_RECOMMEND
	</select>
	
	<select id="MemberRecommend_r_noSelect" resultType="Member_RecommendVO">
		select count(*) FROM MEMBER_RECOMMEND where r_no = #{r_no} and M_ID=#{m_id}
	</select>
	
	<update id="Mr_count_Update" parameterType="Member_RecommendVO">
		UPDATE MEMBER_RECOMMEND 
			set MR_COUNT=MR_COUNT+1 
				where R_NO=#{r_no} and M_ID=#{m_id}
	</update>
	
 	<insert id="member_recommend_Insert" parameterType="Member_RecommendVO">
		INSERT into MEMBER_RECOMMEND VALUES(#{mr_no}, #{m_id}, #{r_no}, 0)
	</insert> 
	
	<select id="member_recommendList_Select" resultType="java.util.HashMap">
		select DISTINCT m.M_NO as m_no, mr.R_NO as r_no, mr.MR_COUNT as mr_count
			  from MEMBER m, MEMBER_RECOMMEND mr
			  where m.M_ID = mr.M_ID
			  ORDER by m.M_NO
	</select>
	
	<select id="userBasedRecommend_Select" resultType="ReviewVO" parameterType="java.util.ArrayList">
		select *
			from review
  			<where>
  				R_NO IN
  				<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			    	#{item.value}
				</foreach>  				
  			</where>
	</select>
	
<!-- end 추천 -->

















<!-- start 게시판 -->
	<select id="selectR_no" resultType="Integer">
		select max(r_no) from review
	</select>

	<!-- 후기게시물 등록  -->
 <insert id="insertReview" parameterType="ReviewVO">
      insert into review
      values(
      #{r_no}, #{m_id}, #{r_title}, #{r_content},
      SYSDATE, 0,0
      )
   </insert>

	<!-- 후기게시물 전체 보기  -->
	<select id="listReview" resultType="ReviewVO">
		select r_no, r_title, m_id,
		r_date, r_hit, r_recomm
		from review
		order by r_no desc, r_date desc
	</select>

	<!-- 페이징처리 -->
	<select id="listPage" resultType="ReviewVO">
	<![CDATA[ 
		select r_no, r_title, m_id, r_date, r_hit , r_recomm
		from review
		where r_no > 0
		order by r_no desc, r_date desc
		]]>
	</select>

	<select id="listCriteria" resultType="ReviewVO">
	<![CDATA[ 
		select r_no, r_title, m_id, r_date, r_hit, r_recomm
		from review
		where r_no > 0
		order by r_no desc, r_date desc
		]]>
	</select>

	<!-- 검색 -->
	<select id="listSearch" resultType="ReviewVO">
	<![CDATA[ 
		select r_no, r_title, m_id, r_date, r_hit, r_recomm
		from review
		where r_no > 0
			]]>
		<include refid="search"></include>
		
		<![CDATA[
		order by r_no desc
		
	]]>
	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and r_title like '%'|| #{keyword}||'%'
			</if>
			<if test="searchType == 'c'.toString()">
				and r_content like '%'|| #{keyword}||'%'
			</if>
			<if test="searchType == 'w'.toString()">
				and m_id like '%'|| #{keyword}||'%'
			</if>

			<if test="searchType == 'tc'.toString()">
				and ( r_title like '%'|| #{keyword}||'%' OR r_content
				like
				'%'||
				#{keyword}||'%')
			</if>
			<if test="searchType == 'cw'.toString()">
				and ( r_content like '%'|| #{keyword}||'%' OR m_id like
				'%'||
				#{keyword}||'%')
			</if>
			<if test="searchType == 'tcw'.toString()">
				and ( r_title like '%'|| #{keyword}||'%'
				OR
				r_content like
				'%'|| #{keyword}||'%'
				OR
				m_id like '%'|| #{keyword}||'%')
			</if>
		</if>
	</sql>
	
	<!-- 게시물 조회수 -->
	<update id="updateR_hit">
		update review set r_hit = r_hit + 1
		where r_no= #{r_no}
	</update>

	<select id="listSearchCount" resultType="int">
	<![CDATA[ 
		select count(r_no)
		from review
		where r_no > 0
		order by r_no desc, r_date desc
		]]>
	</select>

	<!-- 총게시물 갯수 -->
	<select id="countPaging" resultType="int">
	<![CDATA[ 
		select count(r_no)
		from review
		where r_no > 0
		]]>
	</select>

	<!-- 게시물 상세보기 -->
	<select id="detailReview" resultType="ReviewVO">
		select * from review where
		r_no = #{r_no}
	</select>

	<!-- 게시물 수정하기 -->
	<update id="updateReview" parameterType="ReviewVO">
		update Review set
		r_title = #{r_title}, r_content = #{r_content},
		r_date = sysdate
		where r_no = #{r_no}
	</update>
	
	<!-- 게시물 삭제 -->
	<delete id="deleteReview">
		delete from Review where r_no = #{r_no}
	</delete>


	<!-- 게시판 첨부파일 업로드 -->
	<insert parameterType="FileVO" id="addAttach">
		insert into review_file
		values(
		#{rf_fullname}, #{r_no}, SYSDATE
		)
	</insert>

	<select id="maxNum" resultType="int">
		select MAX(r_no) from review
	</select>

	<!-- 첨부파일 주가된 게시물 조회 -->
	<select id="getAttach" resultType="string">
		select rf_fullname
		from
		review_file
		where r_no = #{r_no}
		order by rf_date
	</select>

	<!-- 첨부파일 수정,삭제 작업 -->
	<delete id="deleteAttach">
		delete from review_file where r_no = #{r_no}
	</delete>

	<insert id="replaceAttach">
		insert into review_file(rf_fullname, r_no)
		values(#{rf_fullname}, #{r_no})
	</insert>

	<!-- 해시태그 -->
	<!-- 내 글에 해시태그 추가하기 -->
	<insert id="addHash" parameterType="hashMap">
		insert into hash values(
		#{h_no}, #{r_no}, #{r_hash}
		)
	</insert>

	<!-- 전체 해시태그 가져가기 -->
	<select id="tagGet" resultType="String">
		select hs_search
		from hash_search
    	ORDER BY HS_COUNT desc
	</select>

	<select id="selectH_no" resultType="Integer">
		select max(h_no) from hash
	</select>
	
	<!--게시판 상세보기에 해시태그 가져오기 -->
	<select id="myhash" resultType="String">
		select r_hash
		from hash
		where r_no = #{r_no}
	</select>
	
	<!-- 해시태그 hit수 증가 -->
	<update id="updatehash" parameterType="String">
		update hash_search set
		hs_count = hs_count + 1
		where hs_search = #{r_hash}
	</update>
	
	<!-- 새로운 해시태그 생성 -->
	<insert id="inserthash" parameterType="map">
		insert into hash_search
		values(
		#{hs_no}, #{hs_search}, 1
		)
	</insert>
	
	<select id="select_hs_no" resultType="integer">
		select max(hs_no)
		from hash_search
	</select>
<!-- end 게시판 -->

</mapper>












